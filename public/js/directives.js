// Generated by CoffeeScript 1.6.1
'use strict';
var Directives;

Directives = angular.module('nodePong.directives', []);

Directives.directive('appVersion', [
  'version', function(version) {
    return function(scope, elm, attrs) {
      return elm.text(version);
    };
  }
]);

Directives.directive('onKeyup', function(scope, elm, attrs) {
  var allowedKeys, applyKeyup;
  applyKeyup = function(key) {
    scope.key = key;
    return scope.$apply(attrs.onKeyup);
  };
  allowedKeys = scope.$eval(attrs.keys);
  return elm.bind('keyup', function(evt) {
    console.log("Key released: " + evt.which);
    if (!((allowedKeys != null) && allowedKeys.length)) {
      return applyKeyup(evt.which);
    } else {
      return angular.forEach(allowedKeys, function(key) {
        if (key === evt.which) {
          return applyKeyup(key);
        }
      });
    }
  });
});

Directives.directive('onKeydown', function(scope, elm, attrs) {
  var allowedKeys, applyKeyup;
  applyKeyup = function(key) {
    scope.key = key;
    return scope.$apply(attrs.onKeyup);
  };
  allowedKeys = scope.$eval(attrs.keys);
  return elm.bind('keydown', function(evt) {
    console.log("Key pressed: " + evt.which);
    if (!((allowedKeys != null) && allowedKeys.length)) {
      return applyKeyup(evt.which);
    } else {
      return angular.forEach(allowedKeys, function(key) {
        if (key === evt.which) {
          return applyKeyup(key);
        }
      });
    }
  });
});
